{
  "stats": {
    "suites": 2,
    "tests": 60,
    "passes": 59,
    "pending": 0,
    "failures": 1,
    "start": "2022-10-03T13:17:42.783Z",
    "end": "2022-10-03T13:19:19.840Z",
    "duration": 84911,
    "testsRegistered": 60,
    "passPercent": 98.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "351dffa0-ef80-4c2d-8597-d4bfc4278607",
      "title": "",
      "fullFile": "cypress\\e2e\\todo.cy.js",
      "file": "cypress\\e2e\\todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
          "title": "TodoMVC - React",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds 2 todos",
              "fullTitle": "TodoMVC - React adds 2 todos",
              "timedOut": null,
              "duration": 1551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.new-todo').type(`${TODO_ITEM_ONE}{enter}`).type(`${TODO_ITEM_TWO}{enter}`).type(`${TODO_ITEM_THREE}{enter}`);",
              "err": {},
              "uuid": "e206b4dc-1a89-4bf5-8487-dc886c44d407",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should focus on the todo input field",
              "fullTitle": "TodoMVC - React should focus on the todo input field",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.focused().should('have.class', 'new-todo');",
              "err": {},
              "uuid": "569cbf6e-5d60-4681-8c43-a60f8199749f",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "No Todos",
              "fullTitle": "TodoMVC - React No Todos",
              "timedOut": null,
              "duration": 647,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.main').should('not.exist');\ncy.get('.footer').should('not.exist');",
              "err": {},
              "uuid": "347f5f09-b539-4a3b-af32-3d2865b1eac2",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New Todos",
              "fullTitle": "TodoMVC - React New Todos",
              "timedOut": null,
              "duration": 950,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.new-todo').type(`${TODO_ITEM_ONE}{enter}`);\ncy.get('.todo-list li:first-child label').should('contain', TODO_ITEM_ONE);",
              "err": {},
              "uuid": "c51d1f17-ece2-4501-9f64-9ebcac4353c6",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adds items",
              "fullTitle": "TodoMVC - React adds items",
              "timedOut": null,
              "duration": 1458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.new-todo').type(`${TODO_ITEM_ONE}{enter}`);\ncy.get('.new-todo').type(`${TODO_ITEM_TWO}{enter}`);\ncy.get('.new-todo').type(`${TODO_ITEM_THREE}{enter}`);\ncy.get('.todo-list li').should('have.length', 3);",
              "err": {},
              "uuid": "85af9322-d67e-4630-ac88-6d90ed63a6df",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should append new items to the bottom of the list",
              "fullTitle": "TodoMVC - React should append new items to the bottom of the list",
              "timedOut": null,
              "duration": 1416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.new-todo').type(`${TODO_ITEM_ONE}{enter}`);\ncy.get('.new-todo').type(`${TODO_ITEM_TWO}{enter}`);\ncy.get('.new-todo').type(`${TODO_ITEM_THREE}{enter}`);\ncy.get('.todo-list li:last-child').should('contain', TODO_ITEM_THREE);",
              "err": {},
              "uuid": "01ae5bcd-e2c7-4506-a207-4e0812f8d900",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should seed default todos",
              "fullTitle": "TodoMVC - React should seed default todos",
              "timedOut": null,
              "duration": 1343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();",
              "err": {},
              "uuid": "803e3b9d-8068-428b-b97b-69bbb87a7589",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create one todo",
              "fullTitle": "TodoMVC - React should create one todo",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createTodo('Test 1');",
              "err": {},
              "uuid": "78df0e50-5eb1-4bd2-a3be-b9759338b538",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show #main and #footer when items added",
              "fullTitle": "TodoMVC - React should show #main and #footer when items added",
              "timedOut": null,
              "duration": 623,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createTodo('Test 1');\ncy.get('.main').should('exist');\ncy.get('.footer').should('exist');",
              "err": {},
              "uuid": "ca55e7e6-5ceb-4084-9628-44e77d81e1ae",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mark all as completed",
              "fullTitle": "TodoMVC - React Mark all as completed",
              "timedOut": null,
              "duration": 1868,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos().as('todos');\ncy.get('ul [type=\"checkbox\"]').check();\ncy.get('@todos').each(el => {\n  cy.wrap(el).should('have.class', 'completed');\n});",
              "err": {},
              "uuid": "fe6a7b59-c7e8-4fd3-8d01-693b7497cfd1",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to clear the complete state of all items",
              "fullTitle": "TodoMVC - React should allow me to clear the complete state of all items",
              "timedOut": null,
              "duration": 2154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos().as('todos');\ncy.get('ul [type=\"checkbox\"]').check();\ncy.get('ul [type=\"checkbox\"]').uncheck();\ncy.get('@todos').each(el => {\n  cy.wrap(el).should('not.have.class', 'completed');\n});",
              "err": {},
              "uuid": "2d113470-9c99-44d6-9f25-76164491162d",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to edit an item",
              "fullTitle": "TodoMVC - React should allow me to edit an item",
              "timedOut": null,
              "duration": 2196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('ul [type=\"checkbox\"]').check();\ncy.get('ul li [type=\"checkbox\"]').eq(1).uncheck();\ncy.get('ul li').eq(1).as('secondEl').find('label').dblclick();\ncy.get('@secondEl').find('.edit').clear().type('Test NEW').type('{enter}');\ncy.get('@secondEl').should('contain', 'Test NEW');",
              "err": {},
              "uuid": "374d3508-ba8e-4b90-940c-e4e150d251d6",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide other controls when editing",
              "fullTitle": "TodoMVC - React should hide other controls when editing",
              "timedOut": null,
              "duration": 1835,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('ul [type=\"checkbox\"]').check();\ncy.get('ul li [type=\"checkbox\"]').eq(1).uncheck();\ncy.get('ul li').eq(1).as('secondEl').find('label').dblclick();\ncy.get('@secondEl').find('[type=\"checkbox\"]').should('not.be.visible');\ncy.get('@secondEl').find('.destroy').should('not.be.visible');",
              "err": {},
              "uuid": "7bc02d48-efe6-4284-8048-14702c4f86e3",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should trim entered text",
              "fullTitle": "TodoMVC - React should trim entered text",
              "timedOut": null,
              "duration": 1695,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.new-todo').type(' Test New ').type('{enter}');\ncy.get('.main ul li').should('have.length', 4);",
              "err": {},
              "uuid": "fba75c83-159f-4ec4-971e-c111d888347c",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove the item if an empty text string was entered",
              "fullTitle": "TodoMVC - React should remove the item if an empty text string was entered",
              "timedOut": null,
              "duration": 1540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.new-todo').type('  ').type('{enter}');\ncy.get('.main ul li').should('have.length', 3);",
              "err": {},
              "uuid": "e120afd6-ade9-4bea-9644-f28fae94d280",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "TodoMVC - React should cancel edits on escape",
              "timedOut": null,
              "duration": 1662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos().as('todos');\ncy.get('@todos').eq(0).as('firstEl').dblclick().type('{esc}');\ncy.get('.main ul li').eq(0).should('contain', TODO_ITEM_ONE);",
              "err": {},
              "uuid": "1accd30f-9324-4113-be80-ef5febda42e6",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "TodoMVC - React should cancel edits on escape",
              "timedOut": null,
              "duration": 1391,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let ar = ['3', ' ', 'items', ' ', 'left'];\ncy.createDefaultTodos();\ncy.get('.todo-count').children().each((el, index) => {\n  expect(el.text()).to.include(ar[index]);\n});",
              "err": {},
              "uuid": "e577e46e-8f96-40b7-8f17-d98fc4e8c360",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "TodoMVC - React should cancel edits on escape",
              "timedOut": null,
              "duration": 1504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.todo-count').children().then(el => {\n  cy.log(el);\n  expect(el.eq(0)).to.contain('3');\n  expect(el.eq(1)).to.contain(' ');\n  expect(el.eq(2)).to.contain('items');\n  expect(el.eq(3)).to.contain(' left');\n});",
              "err": {},
              "uuid": "2efe6fb7-306d-4e48-bb6c-25a24c713bfa",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Clear completed button",
              "fullTitle": "TodoMVC - React Clear completed button",
              "timedOut": null,
              "duration": 1447,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main ul li').first().find('[type=\"checkbox\"]').check();\ncy.get('.clear-completed').should('exist');",
              "err": {},
              "uuid": "aea39f67-97c7-4d41-ab3b-cb4c0f99c0bc",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove completed items when clicked",
              "fullTitle": "TodoMVC - React should remove completed items when clicked",
              "timedOut": null,
              "duration": 1585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main ul li').first().as('firstEl').find('[type=\"checkbox\"]').check();\ncy.get('.clear-completed').click();\ncy.get('.main li').should('not.contain', TODO_ITEM_ONE);",
              "err": {},
              "uuid": "a7b3c78c-a664-4bea-8c9e-0f33e6918645",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be hidden when there are no items that are completed",
              "fullTitle": "TodoMVC - React should be hidden when there are no items that are completed",
              "timedOut": null,
              "duration": 1354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.clear-completed').should('not.exist');",
              "err": {},
              "uuid": "f4d8417e-bf1a-420a-8e8d-cc700014f010",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should persist its data",
              "fullTitle": "TodoMVC - React should persist its data",
              "timedOut": null,
              "duration": 1802,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main li').as('list').should('have.length', 3);\ncy.reload();\ncy.get('@list').should('have.length', 3);",
              "err": {},
              "uuid": "058f98ee-d062-4301-8c79-f50c5a77107d",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display active items",
              "fullTitle": "TodoMVC - React should allow me to display active items",
              "timedOut": null,
              "duration": 1567,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main ul li').first().as('firstEl').find('[type=\"checkbox\"]').check();\ncy.get('footer ul li:nth-of-type(2)').click();\ncy.get('.main li').should('not.contain', TODO_ITEM_ONE);",
              "err": {},
              "uuid": "e18cf8db-cf70-4cfe-8f4f-aa8bb0872c89",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should respect the back button",
              "fullTitle": "TodoMVC - React should respect the back button",
              "timedOut": null,
              "duration": 1893,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main ul li').first().as('firstEl').find('[type=\"checkbox\"]').check();\ncy.get('footer ul li:nth-of-type(2)').click();\ncy.get('footer ul li:nth-of-type(3)').click();\ncy.go('back');\ncy.get('.main li').should('have.length', 2);\ncy.go('back');\ncy.get('.main li').should('have.length', 3);",
              "err": {},
              "uuid": "351484e4-e82b-40fc-814b-4fbb8cec8552",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display completed items",
              "fullTitle": "TodoMVC - React should allow me to display completed items",
              "timedOut": null,
              "duration": 1647,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main ul li').first().as('firstEl').find('[type=\"checkbox\"]').check();\ncy.get('footer ul li:nth-of-type(3)').click().should('have.length', 1);",
              "err": {},
              "uuid": "56b8bbda-6e20-4db9-944e-93e147ae3f03",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display all items",
              "fullTitle": "TodoMVC - React should allow me to display all items",
              "timedOut": null,
              "duration": 1603,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('.main ul li').first().as('firstEl').find('[type=\"checkbox\"]').check();\ncy.get('footer ul li:nth-of-type(3)').click();\ncy.get('footer ul li:nth-of-type(1)').click();\ncy.get('.main li').should('have.length', 3);",
              "err": {},
              "uuid": "442ef3bf-39ca-41e4-acab-e06b81e9b03a",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should highlight the currently applied filter",
              "fullTitle": "TodoMVC - React should highlight the currently applied filter",
              "timedOut": null,
              "duration": 1337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.createDefaultTodos();\ncy.get('footer ul li:nth-of-type(1) a').should('have.class', 'selected');",
              "err": {},
              "uuid": "60ca73bc-6105-4d92-8500-745cde3d191b",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has good contrast when empty",
              "fullTitle": "TodoMVC - React has good contrast when empty",
              "timedOut": null,
              "duration": 817,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.addAxeCode();\ncy.checkA11y();",
              "err": {
                "message": "AssertionError: 2 accessibility violations were detected: expected 2 to equal 0",
                "estack": "AssertionError: 2 accessibility violations were detected: expected 2 to equal 0\n    at Context.eval (webpack:///./node_modules/cypress-axe/dist/index.js:76:0)",
                "diff": null
              },
              "uuid": "a1947978-2794-4d5a-a67a-72691d686bed",
              "parentUUID": "ed8cdb5e-af54-4606-b51f-9e6b6da1b2d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e206b4dc-1a89-4bf5-8487-dc886c44d407",
            "569cbf6e-5d60-4681-8c43-a60f8199749f",
            "347f5f09-b539-4a3b-af32-3d2865b1eac2",
            "c51d1f17-ece2-4501-9f64-9ebcac4353c6",
            "85af9322-d67e-4630-ac88-6d90ed63a6df",
            "01ae5bcd-e2c7-4506-a207-4e0812f8d900",
            "803e3b9d-8068-428b-b97b-69bbb87a7589",
            "78df0e50-5eb1-4bd2-a3be-b9759338b538",
            "ca55e7e6-5ceb-4084-9628-44e77d81e1ae",
            "fe6a7b59-c7e8-4fd3-8d01-693b7497cfd1",
            "2d113470-9c99-44d6-9f25-76164491162d",
            "374d3508-ba8e-4b90-940c-e4e150d251d6",
            "7bc02d48-efe6-4284-8048-14702c4f86e3",
            "fba75c83-159f-4ec4-971e-c111d888347c",
            "e120afd6-ade9-4bea-9644-f28fae94d280",
            "1accd30f-9324-4113-be80-ef5febda42e6",
            "e577e46e-8f96-40b7-8f17-d98fc4e8c360",
            "2efe6fb7-306d-4e48-bb6c-25a24c713bfa",
            "aea39f67-97c7-4d41-ab3b-cb4c0f99c0bc",
            "a7b3c78c-a664-4bea-8c9e-0f33e6918645",
            "f4d8417e-bf1a-420a-8e8d-cc700014f010",
            "058f98ee-d062-4301-8c79-f50c5a77107d",
            "e18cf8db-cf70-4cfe-8f4f-aa8bb0872c89",
            "351484e4-e82b-40fc-814b-4fbb8cec8552",
            "56b8bbda-6e20-4db9-944e-93e147ae3f03",
            "442ef3bf-39ca-41e4-acab-e06b81e9b03a",
            "60ca73bc-6105-4d92-8500-745cde3d191b"
          ],
          "failures": [
            "a1947978-2794-4d5a-a67a-72691d686bed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39999,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6a881f26-e55e-4d62-b2ae-6c334f9cbf9f",
      "title": "",
      "fullFile": "cypress\\e2e\\app.cy.js",
      "file": "cypress\\e2e\\app.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5356418-3119-4f81-ad60-9356f3205c42",
          "title": "TodoMVC - React",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds 2 todos",
              "fullTitle": "TodoMVC - React adds 2 todos",
              "timedOut": null,
              "duration": 2048,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.new-todo').type('learn testing{enter}').type('be cool{enter}');\ncy.get('.todo-list li').should('have.length', 2);",
              "err": {},
              "uuid": "9d34be7e-b06f-4a88-9a18-7594bb16746e",
              "parentUUID": "f5356418-3119-4f81-ad60-9356f3205c42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "7182d9a0-37bd-4415-b89a-ddc2f505250b",
              "title": "When page is initially opened",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should focus on the todo input field",
                  "fullTitle": "TodoMVC - React When page is initially opened should focus on the todo input field",
                  "timedOut": null,
                  "duration": 569,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// get the currently focused element and assert\n// that it has class='new-todo'\n//\n// http://on.cypress.io/focused\ncy.focused().should('have.class', 'new-todo');",
                  "err": {},
                  "uuid": "814d4bdb-9acc-446f-b05a-83952bbb406e",
                  "parentUUID": "7182d9a0-37bd-4415-b89a-ddc2f505250b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "814d4bdb-9acc-446f-b05a-83952bbb406e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 569,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a228df12-1ecf-4bbe-851c-7462d5628d17",
              "title": "No Todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should hide #main and #footer",
                  "fullTitle": "TodoMVC - React No Todos should hide #main and #footer",
                  "timedOut": null,
                  "duration": 369,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Unlike the TodoMVC tests, we don't need to create\n// a gazillion helper functions which are difficult to\n// parse through. Instead we'll opt to use real selectors\n// so as to make our testing intentions as clear as possible.\n//\n// http://on.cypress.io/get\ncy.get('.todo-list li').should('not.exist');\ncy.get('.main').should('not.exist');\ncy.get('.footer').should('not.exist');",
                  "err": {},
                  "uuid": "6ffe55a7-24b8-4f04-892b-bbbe770ffeab",
                  "parentUUID": "a228df12-1ecf-4bbe-851c-7462d5628d17",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ffe55a7-24b8-4f04-892b-bbbe770ffeab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 369,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
              "title": "New Todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow me to add todo items",
                  "fullTitle": "TodoMVC - React New Todo should allow me to add todo items",
                  "timedOut": null,
                  "duration": 1192,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// create 1st todo\ncy.get('.new-todo').type(TODO_ITEM_ONE).type('{enter}'); // make sure the 1st label contains the 1st todo text\ncy.get('.todo-list li').eq(0).find('label').should('contain', TODO_ITEM_ONE); // create 2nd todo\ncy.get('.new-todo').type(TODO_ITEM_TWO).type('{enter}'); // make sure the 2nd label contains the 2nd todo text\ncy.get('.todo-list li').eq(1).find('label').should('contain', TODO_ITEM_TWO);",
                  "err": {},
                  "uuid": "cfbede3c-1c30-4be0-a9d6-6cb3098857fe",
                  "parentUUID": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "adds items",
                  "fullTitle": "TodoMVC - React New Todo adds items",
                  "timedOut": null,
                  "duration": 1095,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// create several todos then check the number of items in the list\ncy.get('.new-todo').type('todo A{enter}').type('todo B{enter}') // we can continue working with same element\n.type('todo C{enter}') // and keep adding new items\n.type('todo D{enter}');\ncy.get('.todo-list li').should('have.length', 4);",
                  "err": {},
                  "uuid": "49bfff54-d873-4dcf-8eda-cb8524842fcd",
                  "parentUUID": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should clear text input field when an item is added",
                  "fullTitle": "TodoMVC - React New Todo should clear text input field when an item is added",
                  "timedOut": null,
                  "duration": 795,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.new-todo').type(TODO_ITEM_ONE).type('{enter}');\ncy.get('.new-todo').should('have.text', '');",
                  "err": {},
                  "uuid": "1dd5afab-4b74-44d2-9b97-f11f14ebc939",
                  "parentUUID": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should append new items to the bottom of the list",
                  "fullTitle": "TodoMVC - React New Todo should append new items to the bottom of the list",
                  "timedOut": null,
                  "duration": 1439,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// this is an example of a custom command\n// defined in cypress/support/commands.js\ncy.createDefaultTodos().as('todos'); // even though the text content is split across\n// multiple <span> and <strong> elements\n// `cy.contains` can verify this correctly\ncy.get('.todo-count').contains('3 items left');\ncy.get('@todos').eq(0).find('label').should('contain', TODO_ITEM_ONE);\ncy.get('@todos').eq(1).find('label').should('contain', TODO_ITEM_TWO);\ncy.get('@todos').eq(2).find('label').should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "5c2f5c32-fea0-4d09-acd9-9a9ea7a8247d",
                  "parentUUID": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should trim text input",
                  "fullTitle": "TodoMVC - React New Todo should trim text input",
                  "timedOut": null,
                  "duration": 863,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// this is an example of another custom command\n// since we repeat the todo creation over and over\n// again. It's up to you to decide when to abstract\n// repetitive behavior and roll that up into a custom\n// command vs explicitly writing the code.\ncy.createTodo(`    ${TODO_ITEM_ONE}    `); // we use as explicit assertion here about the text instead of\n// using 'contain' so we can specify the exact text of the element\n// does not have any whitespace around it\ncy.get('.todo-list li').eq(0).should('have.text', TODO_ITEM_ONE);",
                  "err": {},
                  "uuid": "a26392df-f40f-4072-939c-c610cb2a767b",
                  "parentUUID": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show #main and #footer when items added",
                  "fullTitle": "TodoMVC - React New Todo should show #main and #footer when items added",
                  "timedOut": null,
                  "duration": 703,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createTodo(TODO_ITEM_ONE);\ncy.get('.main').should('be.visible');\ncy.get('.footer').should('be.visible');",
                  "err": {},
                  "uuid": "395dbee9-7d65-4d1e-a183-c00f5688193a",
                  "parentUUID": "9d8fbb11-e600-4ada-83e6-49cbfaaf4967",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cfbede3c-1c30-4be0-a9d6-6cb3098857fe",
                "49bfff54-d873-4dcf-8eda-cb8524842fcd",
                "1dd5afab-4b74-44d2-9b97-f11f14ebc939",
                "5c2f5c32-fea0-4d09-acd9-9a9ea7a8247d",
                "a26392df-f40f-4072-939c-c610cb2a767b",
                "395dbee9-7d65-4d1e-a183-c00f5688193a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6087,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1dece783-4f43-46e1-a58a-797820b59bbd",
              "title": "Mark all as completed",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow me to mark all items as completed",
                  "fullTitle": "TodoMVC - React Mark all as completed should allow me to mark all items as completed",
                  "timedOut": null,
                  "duration": 1618,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// complete all todos\n// we use 'check' instead of 'click'\n// because that indicates our intention much clearer\ncy.get('.toggle-all').check(); // get each todo li and ensure its class is 'completed'\ncy.get('@todos').eq(0).should('have.class', 'completed');\ncy.get('@todos').eq(1).should('have.class', 'completed');\ncy.get('@todos').eq(2).should('have.class', 'completed');",
                  "err": {},
                  "uuid": "92830a02-4a9c-4788-89b5-59ac6c87d51d",
                  "parentUUID": "1dece783-4f43-46e1-a58a-797820b59bbd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow me to clear the complete state of all items",
                  "fullTitle": "TodoMVC - React Mark all as completed should allow me to clear the complete state of all items",
                  "timedOut": null,
                  "duration": 1586,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// check and then immediately uncheck\ncy.get('.toggle-all').check().uncheck();\ncy.get('@todos').eq(0).should('not.have.class', 'completed');\ncy.get('@todos').eq(1).should('not.have.class', 'completed');\ncy.get('@todos').eq(2).should('not.have.class', 'completed');",
                  "err": {},
                  "uuid": "eec7f22b-e2e0-4fc4-96a5-60ae0546648c",
                  "parentUUID": "1dece783-4f43-46e1-a58a-797820b59bbd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "complete all checkbox should update state when items are completed / cleared",
                  "fullTitle": "TodoMVC - React Mark all as completed complete all checkbox should update state when items are completed / cleared",
                  "timedOut": null,
                  "duration": 1635,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// alias the .toggle-all for reuse later\ncy.get('.toggle-all').as('toggleAll').check() // this assertion is silly here IMO but\n// it is what TodoMVC does\n.should('be.checked'); // alias the first todo and then click it\ncy.get('.todo-list li').eq(0).as('firstTodo').find('.toggle').uncheck(); // reference the .toggle-all element again\n// and make sure its not checked\ncy.get('@toggleAll').should('not.be.checked'); // reference the first todo again and now toggle it\ncy.get('@firstTodo').find('.toggle').check(); // assert the toggle all is checked again\ncy.get('@toggleAll').should('be.checked');",
                  "err": {},
                  "uuid": "0019e9db-7d32-42b6-864c-4ab1e37ee752",
                  "parentUUID": "1dece783-4f43-46e1-a58a-797820b59bbd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92830a02-4a9c-4788-89b5-59ac6c87d51d",
                "eec7f22b-e2e0-4fc4-96a5-60ae0546648c",
                "0019e9db-7d32-42b6-864c-4ab1e37ee752"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4839,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3a17c078-9e7b-4553-8263-c1d73449a1c1",
              "title": "Item",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow me to mark items as complete",
                  "fullTitle": "TodoMVC - React Item should allow me to mark items as complete",
                  "timedOut": null,
                  "duration": 1193,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// we are aliasing the return value of\n// our custom command 'createTodo'\n//\n// the return value is the <li> in the <ul.todos-list>\ncy.createTodo(TODO_ITEM_ONE).as('firstTodo');\ncy.createTodo(TODO_ITEM_TWO).as('secondTodo');\ncy.get('@firstTodo').find('.toggle').check();\ncy.get('@firstTodo').should('have.class', 'completed');\ncy.get('@secondTodo').should('not.have.class', 'completed');\ncy.get('@secondTodo').find('.toggle').check();\ncy.get('@firstTodo').should('have.class', 'completed');\ncy.get('@secondTodo').should('have.class', 'completed');",
                  "err": {},
                  "uuid": "9dabdb15-d345-4b66-921c-5cf37dd65da1",
                  "parentUUID": "3a17c078-9e7b-4553-8263-c1d73449a1c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow me to un-mark items as complete",
                  "fullTitle": "TodoMVC - React Item should allow me to un-mark items as complete",
                  "timedOut": null,
                  "duration": 1272,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createTodo(TODO_ITEM_ONE).as('firstTodo');\ncy.createTodo(TODO_ITEM_TWO).as('secondTodo');\ncy.get('@firstTodo').find('.toggle').check();\ncy.get('@firstTodo').should('have.class', 'completed');\ncy.get('@secondTodo').should('not.have.class', 'completed');\ncy.get('@firstTodo').find('.toggle').uncheck();\ncy.get('@firstTodo').should('not.have.class', 'completed');\ncy.get('@secondTodo').should('not.have.class', 'completed');",
                  "err": {},
                  "uuid": "da021783-e4c0-4ff5-babd-46a734b97454",
                  "parentUUID": "3a17c078-9e7b-4553-8263-c1d73449a1c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow me to edit an item",
                  "fullTitle": "TodoMVC - React Item should allow me to edit an item",
                  "timedOut": null,
                  "duration": 2098,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createDefaultTodos().as('todos');\ncy.get('@todos').eq(1).as('secondTodo') // TODO: fix this, dblclick should\n// have been issued to label\n.find('label').dblclick(); // clear out the inputs current value\n// and type a new value\ncy.get('@secondTodo').find('.edit').clear().type('buy some sausages').type('{enter}'); // explicitly assert about the text value\ncy.get('@todos').eq(0).should('contain', TODO_ITEM_ONE);\ncy.get('@secondTodo').should('contain', 'buy some sausages');\ncy.get('@todos').eq(2).should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "5e5c5978-2705-45ee-966b-1241f0c54fcd",
                  "parentUUID": "3a17c078-9e7b-4553-8263-c1d73449a1c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9dabdb15-d345-4b66-921c-5cf37dd65da1",
                "da021783-e4c0-4ff5-babd-46a734b97454",
                "5e5c5978-2705-45ee-966b-1241f0c54fcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4563,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "60340e8e-f46c-436e-b614-b02fe8e9d6f1",
              "title": "Editing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should hide other controls when editing",
                  "fullTitle": "TodoMVC - React Editing should hide other controls when editing",
                  "timedOut": null,
                  "duration": 1511,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).as('secondTodo').find('label').dblclick();\ncy.get('@secondTodo').find('.toggle').should('not.be.visible');\ncy.get('@secondTodo').find('label').should('not.be.visible');",
                  "err": {},
                  "uuid": "7c664ee0-c185-432f-a9d8-12def168bbaa",
                  "parentUUID": "60340e8e-f46c-436e-b614-b02fe8e9d6f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should save edits on blur",
                  "fullTitle": "TodoMVC - React Editing should save edits on blur",
                  "timedOut": null,
                  "duration": 2205,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).as('secondTodo').find('label').dblclick();\ncy.get('@secondTodo').find('.edit').clear().type('buy some sausages') // we can just send the blur event directly\n// to the input instead of having to click\n// on another button on the page. though you\n// could do that its just more mental work\n.blur();\ncy.get('@todos').eq(0).should('contain', TODO_ITEM_ONE);\ncy.get('@secondTodo').should('contain', 'buy some sausages');\ncy.get('@todos').eq(2).should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "d29b7573-203a-4948-990c-4092eafba74f",
                  "parentUUID": "60340e8e-f46c-436e-b614-b02fe8e9d6f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should trim entered text",
                  "fullTitle": "TodoMVC - React Editing should trim entered text",
                  "timedOut": null,
                  "duration": 2032,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).as('secondTodo').find('label').dblclick();\ncy.get('@secondTodo').find('.edit').clear().type('    buy some sausages    ').type('{enter}');\ncy.get('@todos').eq(0).should('contain', TODO_ITEM_ONE);\ncy.get('@secondTodo').should('contain', 'buy some sausages');\ncy.get('@todos').eq(2).should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "5e036e4a-7f7d-46fd-a302-47f3c049be61",
                  "parentUUID": "60340e8e-f46c-436e-b614-b02fe8e9d6f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the item if an empty text string was entered",
                  "fullTitle": "TodoMVC - React Editing should remove the item if an empty text string was entered",
                  "timedOut": null,
                  "duration": 1690,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).as('secondTodo').find('label').dblclick();\ncy.get('@secondTodo').find('.edit').clear().type('{enter}');\ncy.get('@todos').should('have.length', 2);",
                  "err": {},
                  "uuid": "eca5fb1b-4969-442a-af3e-6b60bcce5897",
                  "parentUUID": "60340e8e-f46c-436e-b614-b02fe8e9d6f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should cancel edits on escape",
                  "fullTitle": "TodoMVC - React Editing should cancel edits on escape",
                  "timedOut": null,
                  "duration": 1703,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).as('secondTodo').find('label').dblclick();\ncy.get('@secondTodo').find('.edit').clear().type('foo{esc}');\ncy.get('@todos').eq(0).should('contain', TODO_ITEM_ONE);\ncy.get('@todos').eq(1).should('contain', TODO_ITEM_TWO);\ncy.get('@todos').eq(2).should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "3131c47c-775d-412f-bcda-55a2b00f250c",
                  "parentUUID": "60340e8e-f46c-436e-b614-b02fe8e9d6f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c664ee0-c185-432f-a9d8-12def168bbaa",
                "d29b7573-203a-4948-990c-4092eafba74f",
                "5e036e4a-7f7d-46fd-a302-47f3c049be61",
                "eca5fb1b-4969-442a-af3e-6b60bcce5897",
                "3131c47c-775d-412f-bcda-55a2b00f250c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9141,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "89727a5f-4872-4555-a3e2-48868af59fed",
              "title": "Counter",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display the current number of todo items",
                  "fullTitle": "TodoMVC - React Counter should display the current number of todo items",
                  "timedOut": null,
                  "duration": 1060,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.createTodo(TODO_ITEM_ONE);\ncy.get('.todo-count').contains('1 item left');\ncy.createTodo(TODO_ITEM_TWO);\ncy.get('.todo-count').contains('2 items left');",
                  "err": {},
                  "uuid": "67a180fb-7bfe-40c1-bb07-5654fa4d301f",
                  "parentUUID": "89727a5f-4872-4555-a3e2-48868af59fed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67a180fb-7bfe-40c1-bb07-5654fa4d301f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1060,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f0b56d7c-5956-4c2e-a8e0-d8f7820f4214",
              "title": "Clear completed button",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display the correct text",
                  "fullTitle": "TodoMVC - React Clear completed button should display the correct text",
                  "timedOut": null,
                  "duration": 1477,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(0).find('.toggle').check();\ncy.get('.clear-completed').contains('Clear completed');",
                  "err": {},
                  "uuid": "339d16ca-36fc-41f8-ae2a-466c9df6a503",
                  "parentUUID": "f0b56d7c-5956-4c2e-a8e0-d8f7820f4214",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove completed items when clicked",
                  "fullTitle": "TodoMVC - React Clear completed button should remove completed items when clicked",
                  "timedOut": null,
                  "duration": 1715,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).find('.toggle').check();\ncy.get('.clear-completed').click();\ncy.get('@todos').should('have.length', 2);\ncy.get('@todos').eq(0).should('contain', TODO_ITEM_ONE);\ncy.get('@todos').eq(1).should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "c4a801fc-7e8c-41dd-a866-343da33fe91c",
                  "parentUUID": "f0b56d7c-5956-4c2e-a8e0-d8f7820f4214",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be hidden when there are no items that are completed",
                  "fullTitle": "TodoMVC - React Clear completed button should be hidden when there are no items that are completed",
                  "timedOut": null,
                  "duration": 1626,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).find('.toggle').check();\ncy.get('.clear-completed').should('be.visible').click();\ncy.get('.clear-completed').should('not.exist');",
                  "err": {},
                  "uuid": "49fb5746-d0bb-4b20-82a7-bfa1fcac6a53",
                  "parentUUID": "f0b56d7c-5956-4c2e-a8e0-d8f7820f4214",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "339d16ca-36fc-41f8-ae2a-466c9df6a503",
                "c4a801fc-7e8c-41dd-a866-343da33fe91c",
                "49fb5746-d0bb-4b20-82a7-bfa1fcac6a53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4818,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "739dfc32-5cc8-40ae-bcd3-a8961c27ef0e",
              "title": "Persistence",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should persist its data",
                  "fullTitle": "TodoMVC - React Persistence should persist its data",
                  "timedOut": null,
                  "duration": 1517,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// mimicking TodoMVC tests\n// by writing out this function\nfunction testState() {\n  cy.get('@firstTodo').should('contain', TODO_ITEM_ONE).and('have.class', 'completed');\n  cy.get('@secondTodo').should('contain', TODO_ITEM_TWO).and('not.have.class', 'completed');\n}\ncy.createTodo(TODO_ITEM_ONE).as('firstTodo');\ncy.createTodo(TODO_ITEM_TWO).as('secondTodo');\ncy.get('@firstTodo').find('.toggle').check().then(testState).reload().then(testState);",
                  "err": {},
                  "uuid": "c9c00da4-6b0a-4e15-a7a6-0587fa6ccfc8",
                  "parentUUID": "739dfc32-5cc8-40ae-bcd3-a8961c27ef0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9c00da4-6b0a-4e15-a7a6-0587fa6ccfc8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1517,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d8d98894-a9cf-4e93-a565-5d54f786b102",
              "title": "Routing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should allow me to display active items",
                  "fullTitle": "TodoMVC - React Routing should allow me to display active items",
                  "timedOut": null,
                  "duration": 1646,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).find('.toggle').check();\ncy.get('.filters').contains('Active').click();\ncy.get('@todos').eq(0).should('contain', TODO_ITEM_ONE);\ncy.get('@todos').eq(1).should('contain', TODO_ITEM_THREE);",
                  "err": {},
                  "uuid": "b055b62e-0c97-4cb8-aa76-9410cb78f33c",
                  "parentUUID": "d8d98894-a9cf-4e93-a565-5d54f786b102",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respect the back button",
                  "fullTitle": "TodoMVC - React Routing should respect the back button",
                  "timedOut": null,
                  "duration": 1868,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).find('.toggle').check();\ncy.get('.filters').contains('Active').click();\ncy.get('.filters').contains('Completed').click();\ncy.get('@todos').should('have.length', 1);\ncy.go('back');\ncy.get('@todos').should('have.length', 2);\ncy.go('back');\ncy.get('@todos').should('have.length', 3);",
                  "err": {},
                  "uuid": "df801c9c-9ef1-455b-be54-22a5c7cc73b7",
                  "parentUUID": "d8d98894-a9cf-4e93-a565-5d54f786b102",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow me to display completed items",
                  "fullTitle": "TodoMVC - React Routing should allow me to display completed items",
                  "timedOut": null,
                  "duration": 1564,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).find('.toggle').check();\ncy.get('.filters').contains('Completed').click();\ncy.get('@todos').should('have.length', 1);",
                  "err": {},
                  "uuid": "d6f14db8-e9b8-474e-8e32-d6dd6da6fe0f",
                  "parentUUID": "d8d98894-a9cf-4e93-a565-5d54f786b102",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow me to display all items",
                  "fullTitle": "TodoMVC - React Routing should allow me to display all items",
                  "timedOut": null,
                  "duration": 1725,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@todos').eq(1).find('.toggle').check();\ncy.get('.filters').contains('Active').click();\ncy.get('.filters').contains('Completed').click();\ncy.get('.filters').contains('All').click();\ncy.get('@todos').should('have.length', 3);",
                  "err": {},
                  "uuid": "39e44068-ec81-41a5-b6bd-b5956087e712",
                  "parentUUID": "d8d98894-a9cf-4e93-a565-5d54f786b102",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should highlight the currently applied filter",
                  "fullTitle": "TodoMVC - React Routing should highlight the currently applied filter",
                  "timedOut": null,
                  "duration": 1490,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// using a within here which will automatically scope\n// nested 'cy' queries to our parent element <ul.filters>\ncy.get('.filters').within(function () {\n  cy.contains('All').should('have.class', 'selected');\n  cy.contains('Active').click().should('have.class', 'selected');\n  cy.contains('Completed').click().should('have.class', 'selected');\n});",
                  "err": {},
                  "uuid": "cc43b96e-77e2-45c5-8c2c-c4c23f37f8c9",
                  "parentUUID": "d8d98894-a9cf-4e93-a565-5d54f786b102",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b055b62e-0c97-4cb8-aa76-9410cb78f33c",
                "df801c9c-9ef1-455b-be54-22a5c7cc73b7",
                "d6f14db8-e9b8-474e-8e32-d6dd6da6fe0f",
                "39e44068-ec81-41a5-b6bd-b5956087e712",
                "cc43b96e-77e2-45c5-8c2c-c4c23f37f8c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8293,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9789f1e7-896d-4d1d-a36b-68454ad7b11f",
              "title": "Contrast",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "has good contrast when empty",
                  "fullTitle": "TodoMVC - React Contrast has good contrast when empty",
                  "timedOut": null,
                  "duration": 552,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.addAxeCode();\ncy.checkA11y(null, {\n  runOnly: ['cat.color']\n});",
                  "err": {},
                  "uuid": "ab80be3b-7216-4b44-897d-29f4adba691b",
                  "parentUUID": "9789f1e7-896d-4d1d-a36b-68454ad7b11f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "has good contrast with several todos",
                  "fullTitle": "TodoMVC - React Contrast has good contrast with several todos",
                  "timedOut": null,
                  "duration": 1056,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.addAxeCode();\ncy.get('.new-todo').type('learn testing{enter}').type('be cool{enter}');\ncy.get('.todo-list li').should('have.length', 2);\ncy.checkA11y(null, {\n  runOnly: ['cat.color']\n}); // and after marking an item completed\ncy.get('.todo-list li').first().find('.toggle').check();\ncy.get('.todo-list li').first().should('have.class', 'completed');\ncy.checkA11y(null, {\n  runOnly: ['cat.color']\n});",
                  "err": {},
                  "uuid": "aebef8f5-1d91-43de-8588-80a199a44a01",
                  "parentUUID": "9789f1e7-896d-4d1d-a36b-68454ad7b11f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab80be3b-7216-4b44-897d-29f4adba691b",
                "aebef8f5-1d91-43de-8588-80a199a44a01"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1608,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "9d34be7e-b06f-4a88-9a18-7594bb16746e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}